const app = document.getElementById('app');

let players = [];
let currentPlayerIndex = 0;
const questionsPerPlayer = 25;

// ุฃุณุฆูุฉ ูุซุงู (ุชูุฏุฑ ุชุบูุฑูุง ุฃู ุชุฒูุฏ)
const questions = [
  "ูุง ูู ุฃูุซุฑ ุดูุก ุชุฎุงู ูููุ",
  "ูุง ูู ุฃุฌูู ุฐูุฑู ูุฏููุ",
  "ูู ุณุจู ููุฐุจุช ุนูู ุตุฏููุ",
  "ูุง ูู ุณุฑ ูุง ุชุนุฑูู ุฃู ุฃุญุฏุ",
  "ูู ูู ุงูุดุฎุต ุงูุฐู ุชุซู ุจู ุฃูุซุฑุ",
  "ูู ุชุญุจ ุงูููุงุฌุขุชุ",
  "ูุง ูู ุฃูุซุฑ ุดูุก ุชุญุจู ูู ููุณูุ",
  "ูุง ูู ุฃุณูุฃ ุนูุจ ูุฏููุ",
  "ูู ุณุจู ูุญุณุฏุช ุฃุญุฏูุงุ",
  "ูุง ูู ุญููู ุงูุฃูุจุฑุ",
  "ูุง ูู ุฃูุซุฑ ุดูุก ูุฌุนูู ุณุนูุฏุ",
  "ูู ุชูุถู ุงูุนุฒูุฉ ุฃู ุงูุตุญุจุฉุ",
  "ูู ุณุจู ูุฎุณุฑุช ุตุฏูู ุจุณุจุจ ูููุฉุ",
  "ูุง ูู ุทุฑููุชู ููุชุนุงูู ูุน ุงูุบุถุจุ",
  "ูู ุชุญุจ ุงููุบุงูุฑุงุชุ",
  "ูุง ูู ุฃูุถู ุดูุก ุญุฏุซ ูู ูุฐุง ุงูุฃุณุจูุนุ",
  "ูู ุชุคูู ุจุงูุญุจ ูู ุฃูู ูุธุฑุฉุ",
  "ูุง ูู ุงูุดูุก ุงูุฐู ุชุชููู ุชุบููุฑู ูู ุญูุงุชูุ",
  "ูู ุชูุถู ุงูุนูู ููุญุฏู ุฃู ุถูู ูุฑููุ",
  "ูุง ูู ุฃูุซุฑ ุดูุก ุชูุฏู ุนูููุ",
  "ูู ุชุฎุงู ูู ุงููุดูุ",
  "ูุง ูู ุงูุดูุก ุงูุฐู ูุฌุนูู ุชุดุนุฑ ุจุงูุฑุงุญุฉุ",
  "ูู ุณุจู ูููุฏุช ุดูุฆูุง ููููุงุ",
  "ูุง ูู ุฃูุจุฑ ูุตูุญุฉ ุชูููุชูุงุ",
  "ูุง ูู ุงูุดูุก ุงูุฐู ูููุฒู ุนู ุงูุขุฎุฑููุ",
  "ูู ุชุญุจ ุงูููุงุฌุขุชุ",
  "ูุง ูู ุงูุดูุก ุงูุฐู ุชูุฑูู ูู ููุณูุ",
  "ูู ุณุจู ููุฏูุช ุนูู ุดูุก ูุนูุชูุ",
  "ูุง ูู ุฃุณูุฃ ูุฐุจุฉ ุณูุนุชูุงุ",
  "ูุง ูู ุงูุดูุก ุงูุฐู ูุง ููููู ุงูุนูุด ุจุฏูููุ"
];

// ุณูุญูุธ ุงูุฃุณุฆูุฉ ุงูุชู ุชู ุชูุฌูููุง ููู ูุงุนุจ ูููุน ุงูุชูุฑุงุฑ
let askedQuestions = {};

// ุดุงุดุฉ ุงูุจุฏุงูุฉ
function showStartScreen() {
  app.innerHTML = `
    <h1>ูุนุจุฉ ุงูุตุฑุงุญุฉ</h1>
    <button id="nextBtn">ุงูุชุงูู</button>
  `;

  document.getElementById('nextBtn').onclick = () => {
    showPlayerCountScreen();
  };
}

// ุดุงุดุฉ ุงุฎุชูุงุฑ ุนุฏุฏ ุงููุงุนุจูู
function showPlayerCountScreen() {
  app.innerHTML = `
    <h2>ุญุฏุฏ ุนุฏุฏ ุงููุงุนุจูู</h2>
    <div id="playerCountContainer">
      <button id="minusBtn" aria-label="ููุต">-</button>
      <span id="playerCount">1</span>
      <button id="plusBtn" aria-label="ุฒูุงุฏุฉ">+</button>
      <button id="confirmCountBtn" title="ุชุฃููุฏ ุงูุนุฏุฏ">โ๏ธ</button>
    </div>
    <div id="namesContainer"></div>
  `;

  let playerCount = 1;
  const minPlayers = 1;
  const maxPlayers = 10;

  const playerCountSpan = document.getElementById('playerCount');
  const minusBtn = document.getElementById('minusBtn');
  const plusBtn = document.getElementById('plusBtn');
  const confirmCountBtn = document.getElementById('confirmCountBtn');

  function updateCount(newCount) {
    if (newCount < minPlayers) newCount = minPlayers;
    if (newCount > maxPlayers) newCount = maxPlayers;
    playerCount = newCount;
    playerCountSpan.textContent = playerCount;
  }

  minusBtn.onclick = () => updateCount(playerCount - 1);
  plusBtn.onclick = () => updateCount(playerCount + 1);

  confirmCountBtn.onclick = () => {
    showNamesInputScreen(playerCount);
  };
}

// ุดุงุดุฉ ุฅุฏุฎุงู ุฃุณูุงุก ุงููุงุนุจูู
function showNamesInputScreen(count) {
  app.innerHTML = `
    <h2>ุฃุฏุฎู ุฃุณูุงุก ุงููุงุนุจูู (${count})</h2>
    <div id="namesInputs"></div>
    <button id="confirmNamesBtn">โ๏ธ ุชุฃููุฏ ุงูุฃุณูุงุก</button>
  `;

  const namesInputsDiv = document.getElementById('namesInputs');
  for (let i = 1; i <= count; i++) {
    const input = document.createElement('input');
    input.type = 'text';
    input.placeholder = `ุงุณู ุงููุงุนุจ ${i}`;
    input.autocomplete = 'off';
    input.classList.add('nameInput');
    namesInputsDiv.appendChild(input);
  }

  document.getElementById('confirmNamesBtn').onclick = () => {
    const inputs = document.querySelectorAll('.nameInput');
    players = [];
    for (const input of inputs) {
      const val = input.value.trim();
      if (!val) {
        alert('ูุฑุฌู ุฅุฏุฎุงู ุฌููุน ุงูุฃุณูุงุก');
        return;
      }
      players.push(val);
    }
    askedQuestions = {};
    showGameExplanationScreen();
  };
}

// ุดุงุดุฉ ุดุฑุญ ุงููุนุจุฉ
function showGameExplanationScreen() {
  app.innerHTML = `
    <h2>ุดุฑุญ ุงููุนุจุฉ</h2>
    <p>
      - ุนูุฏ ูู ูุงุนุจ 25 ุณุคุงู<br />
      - ุชุธูุฑ ุงูุฃุณุฆูุฉ ุนุดูุงุฆู ููู ูุงุนุจ ุจุฏูู ุชูุฑุงุฑ<br />
      - ููุฏุฑ ูุฌุงูุจ ุฃู ููุฑุฑ ุงูุณุคุงู<br />
      - ูููู ูุนุทู ุงูุณุคุงู ูุฃู ูุงุนุจ ุขุฎุฑ ุจุงุณุชุฎุฏุงู ุฒุฑ ุงูุนูุณ<br />
      - ุนูุฏ ุงูุชูุงุก ุงูุฃุณุฆูุฉ ุชูุชูู ุงููุนุจุฉ
    </p>
    <button id="startGameBtn">ุงุจุฏุฃ ุงููุนุจุฉ</button>
  `;

  document.getElementById('startGameBtn').onclick = () => {
    currentPlayerIndex = 0;
    askedQuestions = {};
    players.forEach(p => askedQuestions[p] = []);
    showQuestionScreen();
  };
}

// ุดุงุดุฉ ุนุฑุถ ุงูุณุคุงู
function showQuestionScreen() {
  app.innerHTML = `
    <h2>ุงููุงุนุจ ุงูุญุงูู: ${players[currentPlayerIndex]}</h2>
    <div id="questionBox">ุฌุงุฑู ุชุญููู ุงูุณุคุงู...</div>
    <div id="questionControls">
      <button id="answerBtn">โ ุฌุงูุจ</button>
      <button id="skipBtn">โ ุชูุฑูุฑ</button>
      <button id="reverseBtn">๐ ุนูุณ</button>
    </div>
    <div id="reverseSelect" style="display:none;"></div>
    <div>ุงูุฃุณุฆูุฉ ุงููุชุจููุฉ: <span id="remainingCount"></span></div>
  `;

  const questionBox = document.getElementById('questionBox');
  const remainingCountSpan = document.getElementById('remainingCount');
  const reverseSelect = document.getElementById('reverseSelect');

  const currentPlayer = players[currentPlayerIndex];

  // ุงุญุตู ุนูู ุณุคุงู ุนุดูุงุฆู ูู ูุนุทู ูุฐุง ุงููุงุนุจ ุจุนุฏ
  const availableQuestions = questions.filter((q) => !askedQuestions[currentPlayer].includes(q));

  if (availableQuestions.length === 0) {
    alert(`ุงูุชูุช ุฃุณุฆูุฉ ุงููุงุนุจ ${currentPlayer}.`);

    // ุงูุชูู ููุงุนุจ ุงูุชุงูู ุฃู ููุงูุฉ ุงููุนุจุฉ
    if (currentPlayerIndex + 1 < players.length) {
      currentPlayerIndex++;
      showQuestionScreen();
    } else {
      showGameOverScreen();
    }
    return;
  }

  // ุฎุฐ ุณุคุงู ุนุดูุงุฆู
  const randomIndex = Math.floor(Math.random() * availableQuestions.length);
  const currentQuestion = availableQuestions[randomIndex];
  questionBox.textContent = currentQuestion;
  remainingCountSpan.textContent = questionsPerPlayer - askedQuestions[currentPlayer].length;

  // ุฒุฑ ุงูุฌูุงุจ
  document.getElementById('answerBtn').onclick = () => {
    askedQuestions[currentPlayer].push(currentQuestion);
    alert(`ุดูุฑูุง ูู ุนูู ุงูุฅุฌุงุจุฉ!`);
    nextTurn();
  };

  // ุฒุฑ ุงูุชูุฑูุฑ
  document.getElementById('skipBtn').onclick = () => {
    askedQuestions[currentPlayer].push(currentQuestion);
    alert(`ุชู ุชุฎุทู ุงูุณุคุงู.`);
    nextTurn();
  };

  // ุฒุฑ ุงูุนูุณ (ุงุฎุชูุงุฑ ูุงุนุจ ุขุฎุฑ)
  document.getElementById('reverseBtn').onclick = () => {
    reverseSelect.style.display = 'block';
    reverseSelect.innerHTML = '';

    players.forEach((player, idx) => {
      if (player !== currentPlayer) {
        const btn = document.createElement('button');
        btn.textContent = player;
        btn.onclick = () => {
          alert(`ุงูุณุคุงู ุงูุนูุณ ุนูู ${player}!`);
          // ูุณุฌู ุงูุณุคุงู ุนูุฏ ุงููุงุนุจ ุงูุฌุฏูุฏ
          askedQuestions[player].push(currentQuestion);
          reverseSelect.style.display = 'none';
          nextTurn();
        };
        reverseSelect.appendChild(btn);
      }
    });

    if (reverseSelect.innerHTML === '') {
      reverseSelect.textContent = 'ูุง ููุฌุฏ ูุงุนุจูู ุขุฎุฑูู ููุนูุณ.';
    }
  };
}

// ุงูุชูู ููุฏูุฑ ุงูุชุงูู
function nextTurn() {
  if (askedQuestions[players[currentPlayerIndex]].length >= questionsPerPlayer) {
    // ุงููุงุนุจ ุงูุชูู ูู ุฃุณุฆูุชูุ ุงูุชูู ููุงุนุจ ุงูุชุงูู
    if (currentPlayerIndex + 1 < players.length) {
      currentPlayerIndex++;
      showQuestionScreen();
    } else {
      showGameOverScreen();
    }
  } else {
    // ุงุณุชูุฑ ูุน ููุณ ุงููุงุนุจ
    showQuestionScreen();
  }
}

// ุดุงุดุฉ ุงูุชูุงุก ุงููุนุจุฉ
function showGameOverScreen() {
  app.innerHTML = `
    <h2>ุงูุชูุช ุงููุนุจุฉ</h2>
    <p>ุดูุฑูุง ููุนุจ! ููููู ุฅุนุงุฏุฉ ุชุดุบูู ุงููุนุจุฉ.</p>
    <button id="restartBtn">ุฅุนุงุฏุฉ ุชุดุบูู</button>
  `;

  document.getElementById('restartBtn').onclick = () => {
    showStartScreen();
  };
}

// ุจุฏุก ุงููุนุจุฉ ุนูุฏ ุชุญููู ุงูุตูุญุฉ
showStartScreen();
